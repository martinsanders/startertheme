/**
 * @class Ext.ux.form.ColorPickerField
 * @extends Ext.form.TriggerField
 * This class makes Ext.ux.ColorPicker available as a form field.
 * @license: BSD
 * @author: Robert B. Williams (extjs id: vtswingkid)
 * @constructor
 * Creates a new ColorPickerField
 * @param {Object} config Configuration options
 * @version 1.1.2
 */
Ext.namespace("Ext.ux","Ext.ux.menu","Ext.ux.form"),"2"==Ext.version.substr(0,1)?(Ext.ux.menu.ColorItem=function(e){e||(e={}),e.style="width:350px;",Ext.ux.menu.ColorItem.superclass.constructor.call(this,new Ext.ux.ColorPicker(e),e),this.picker=this.component,this.addEvents("select"),this.picker.on("render",function(e){e.getEl().swallowEvent("click")}),this.picker.on("select",this.onSelect,this)},Ext.extend(Ext.ux.menu.ColorItem,Ext.menu.Adapter,{onSelect:function(e,t){this.fireEvent("select",this,t,e),Ext.ux.menu.ColorItem.superclass.handleClick.call(this)}}),Ext.ux.menu.ColorMenu=function(e){Ext.ux.menu.ColorMenu.superclass.constructor.call(this,e),this.plain=!0;var t=new Ext.ux.menu.ColorItem(e);this.add(t),this.picker=t.picker,this.relayEvents(t,["select"])},Ext.extend(Ext.ux.menu.ColorMenu,Ext.menu.Menu,{beforeDestroy:function(){this.picker.destroy()}})):Ext.ux.menu.ColorMenu=Ext.extend(Ext.menu.Menu,{enableScrolling:!1,hideOnClick:!0,initComponent:function(){Ext.apply(this,{plain:!0,showSeparator:!1,items:this.picker=new Ext.ux.ColorPicker(Ext.apply({style:"width:350px;"},this.initialConfig))}),this.picker.purgeListeners(),Ext.ux.menu.ColorMenu.superclass.initComponent.call(this),this.relayEvents(this.picker,["select"]),this.on("select",this.menuHide,this),this.handler&&this.on("select",this.handler,this.scope||this)},menuHide:function(){this.hideOnClick&&this.hide(!0)}}),Ext.ux.form.ColorPickerField=Ext.extend(Ext.form.TriggerField,{initComponent:function(){Ext.ux.form.ColorPickerField.superclass.initComponent.call(this),this.menu=new Ext.ux.menu.ColorMenu},setValue:function(e){if(/^[0-9a-fA-F]{6}$/.test(e)){Ext.ux.form.ColorPickerField.superclass.setValue.apply(this,arguments);var t=this.menu.picker.rgbToHex(this.menu.picker.invert(this.menu.picker.hexToRgb(e)));this.el.applyStyles("background: #"+e+"; color: #"+t+";")}},onDestroy:function(){this.menu&&this.menu.destroy(),this.wrap&&this.wrap.remove(),Ext.ux.form.ColorPickerField.superclass.onDestroy.call(this)},onBlur:function(){Ext.ux.form.ColorPickerField.superclass.onBlur.call(this);var e=this.getValue();if(/^[0-9a-fA-F]{6}$/.test(e)){var t=this.menu.picker.rgbToHex(this.menu.picker.invert(this.menu.picker.hexToRgb(e)));this.el.applyStyles("background: #"+e+"; color: #"+t+";")}else this.el.applyStyles("background: #ffffff; color: #000000;")},menuListeners:{select:function(e,t){this.setValue(t),this.fireEvent("select",this,t),this.focus.defer(10,this)},show:function(e){this.onFocus()},hide:function(){this.focus.defer(10,this);var e=this.menuListeners;this.menu.un("select",e.select,this),this.menu.un("show",e.show,this),this.menu.un("hide",e.hide,this)}},onTriggerClick:function(){this.disabled||(this.menu.on(Ext.apply({},this.menuListeners,{scope:this})),this.menu.show(this.el,"tl-bl?"),this.menu.picker.setColor(this.getValue()))}}),Ext.reg("colorpickerfield",Ext.ux.form.ColorPickerField);