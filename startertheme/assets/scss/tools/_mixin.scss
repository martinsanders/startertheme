// Mixin //
@import '../settings/vars';

//retina images
@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
        // on retina, use image that's scaled by 2
        background-image: url($image);
        background-size: $width $height;
    }
}

// Media sizes
@mixin breakpoint($point) {
    @if $point == xl {
        @media (min-width: 1200px) {
            @content;
        }
    } @else if $point == lg {
        @media (min-width: 992px) and (max-width: 1199px) {
            @content;
        }
    } @else if $point == md {
        @media (min-width: 768px) and (max-width: 991px) {
            @content;
        }
    } @else if $point == sm {
        @media (max-width: 767px) {
            @content;
        }
    } @else if $point == xs {
        @media (max-width: 575px) {
            @content;
        }
    }
}

// Centering object
@mixin vertical-align() {
    display: block;

    &::before {
        content: '';
        display: inline-block;
        height: 100%;
        margin-right: -.25em;
        vertical-align: middle;
    }

    > * {
        display: inline-block;
        vertical-align: middle;
        width: 98%;
    }

}

// Transform
@mixin transform($args...) {
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
    transform: $args;
}

// Greyscale filter
@mixin grayscale($grayscale) {
    -webkit-filter: #{ 'grayscale(' + $grayscale + ')' };
    filter: #{ 'grayscale(' + $grayscale + ')' };
}

// Box shadow
@mixin box-shadow($shadow) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}

// Opacity
// #6 http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/
@mixin opacity($opacity) {
    opacity: $opacity;
    filter: alpha(opacity = $opacity * 100);
}
